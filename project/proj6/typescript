Script started on 2019-04-27 12:21:11-04:00
[mag4@linux3 proj6]ls
frac_heap.c   frac_heap.h  Makefile  proj6.o	test1.c  test2.c  test3.c  test4.c  test5.c  test6.c  typescript
frac_heap.c~  frac_heap.o  proj6.c   proj6.txt	test1.o  test2.o  test3.o  test4.o  test5.o  test6.o
[mag4@linux3 proj6]make proj6
gcc proj6.o frac_heap.o -o proj6
[mag4@linux3 proj6]./proj6
called malloc(160): return 0x1e1d260

-2/3 plus 1/4 = -5/12

**** BEGIN HEAP DUMP ****

0x1e1d290
0x1e1d2a0
0x1e1d2b0
0x1e1d2c0
0x1e1d2d0
0x1e1d2e0
0x1e1d2f0
**** END HEAP DUMP ****

**** BEGIN HEAP DUMP ****

0x1e1d270
0x1e1d290
0x1e1d2a0
0x1e1d2b0
0x1e1d2c0
0x1e1d2d0
0x1e1d2e0
0x1e1d2f0
**** END HEAP DUMP ****

**** BEGIN HEAP DUMP ****

0x1e1d2b0
0x1e1d2c0
0x1e1d2d0
0x1e1d2e0
0x1e1d2f0
**** END HEAP DUMP ****

[mag4@linux3 proj6]make test1.out
gcc test1.o frac_heap.o -o test1.out
[mag4@linux3 proj6]./test1.out

******** TEST 1 *********

**** BEGIN HEAP DUMP ****

**** END HEAP DUMP ****

called malloc(160): return 0x249f670

**** BEGIN HEAP DUMP ****

**** END HEAP DUMP ****

**** BEGIN HEAP DUMP ****

0x249f700
**** END HEAP DUMP ****

called malloc(160): return 0x249f720

**** BEGIN HEAP DUMP ****

0x249f730
0x249f740
0x249f750
0x249f760
0x249f770
0x249f780
0x249f790
0x249f7a0
0x249f7b0
**** END HEAP DUMP ****

[mag4@linux3 proj6]make test2.out
gcc test2.o frac_heap.o -o test2.out
[mag4@linux3 proj6]./test2.out

******** TEST 2 *********
called malloc(160): return 0x105d670

called malloc(160): return 0x105d720

**** BEGIN HEAP DUMP ****

0x105d790
0x105d7a0
0x105d7b0
**** END HEAP DUMP ****

**** BEGIN HEAP DUMP ****

0x105d6d0
0x105d6a0
0x105d720
0x105d790
0x105d7a0
0x105d7b0
**** END HEAP DUMP ****

[mag4@linux3 proj6]make test3.out
gcc test3.o frac_heap.o -o test3.out
[mag4@linux3 proj6]./test3.out

******** TEST 3 *********
Error: del_frac() called on NULL Pointer.
called malloc(160): return 0x1d7d670

**** BEGIN HEAP DUMP ****

0x1d7d680
0x1d7d670
0x1d7d690
0x1d7d6a0
0x1d7d6b0
0x1d7d6c0
0x1d7d6d0
0x1d7d6e0
0x1d7d6f0
0x1d7d700
**** END HEAP DUMP ****

[mag4@linux3 proj6]./test[K[K[K[K[K[Kmake test4.out
gcc test4.o frac_heap.o -o test4.out
[mag4@linux3 proj6]./test4.out

******** TEST 4 *********
Error: del_frac() called on NULL Pointer.
called malloc(160): return 0x2512670

called malloc(160): return 0x2512720

called malloc(160): return 0x25127d0

called malloc(160): return 0x2512880

called malloc(160): return 0x2512930

called malloc(160): return 0x25129e0

called malloc(160): return 0x2512a90

called malloc(160): return 0x2512b40

called malloc(160): return 0x2512bf0

called malloc(160): return 0x2512ca0

called malloc(160): return 0x2512d50

called malloc(160): return 0x2512e00

called malloc(160): return 0x2512eb0

called malloc(160): return 0x2512f60

called malloc(160): return 0x2513010

called malloc(160): return 0x25130c0

called malloc(160): return 0x2513170

called malloc(160): return 0x2513220

called malloc(160): return 0x25132d0

called malloc(160): return 0x2513380

called malloc(160): return 0x2513430

called malloc(160): return 0x25134e0

called malloc(160): return 0x2513590

called malloc(160): return 0x2513640

called malloc(160): return 0x25136f0

called malloc(160): return 0x25137a0

called malloc(160): return 0x2513850

called malloc(160): return 0x2513900

called malloc(160): return 0x25139b0

called malloc(160): return 0x2513a60

called malloc(160): return 0x2513b10

called malloc(160): return 0x2513bc0

called malloc(160): return 0x2513c70

called malloc(160): return 0x2513d20

called malloc(160): return 0x2513dd0

called malloc(160): return 0x2513e80

called malloc(160): return 0x2513f30

called malloc(160): return 0x2513fe0

called malloc(160): return 0x2514090

called malloc(160): return 0x2514140

called malloc(160): return 0x25141f0

called malloc(160): return 0x25142a0

called malloc(160): return 0x2514350

called malloc(160): return 0x2514400

called malloc(160): return 0x25144b0

called malloc(160): return 0x2514560

called malloc(160): return 0x2514610

called malloc(160): return 0x25146c0

called malloc(160): return 0x2514770

called malloc(160): return 0x2514820

called malloc(160): return 0x25148d0

called malloc(160): return 0x2514980

called malloc(160): return 0x2514a30

called malloc(160): return 0x2514ae0

called malloc(160): return 0x2514b90

called malloc(160): return 0x2514c40

called malloc(160): return 0x2514cf0

called malloc(160): return 0x2514da0

called malloc(160): return 0x2514e50

called malloc(160): return 0x2514f00

called malloc(160): return 0x2514fb0

called malloc(160): return 0x2515060

called malloc(160): return 0x2515110

called malloc(160): return 0x25151c0

called malloc(160): return 0x2515270

called malloc(160): return 0x2515320

called malloc(160): return 0x25153d0

called malloc(160): return 0x2515480

called malloc(160): return 0x2515530

called malloc(160): return 0x25155e0

called malloc(160): return 0x2515690

called malloc(160): return 0x2515740

called malloc(160): return 0x25157f0

called malloc(160): return 0x25158a0

called malloc(160): return 0x2515950

called malloc(160): return 0x2515a00

called malloc(160): return 0x2515ab0

called malloc(160): return 0x2515b60

called malloc(160): return 0x2515c10

called malloc(160): return 0x2515cc0

called malloc(160): return 0x2515d70

called malloc(160): return 0x2515e20

called malloc(160): return 0x2515ed0

called malloc(160): return 0x2515f80

called malloc(160): return 0x2516030

called malloc(160): return 0x25160e0

called malloc(160): return 0x2516190

called malloc(160): return 0x2516240

called malloc(160): return 0x25162f0

called malloc(160): return 0x25163a0

called malloc(160): return 0x2516450

called malloc(160): return 0x2516500

called malloc(160): return 0x25165b0

called malloc(160): return 0x2516660

called malloc(160): return 0x2516710

called malloc(160): return 0x25167c0

called malloc(160): return 0x2516870

called malloc(160): return 0x2516920

called malloc(160): return 0x25169d0

called malloc(160): return 0x2516a80

**** BEGIN HEAP DUMP ****

**** END HEAP DUMP ****

[mag4@linux3 proj6]make test4.out[K[K[K[K[K5.out
gcc test5.o frac_heap.o -o test5.out
[mag4@linux3 proj6]./test5.out

******** TEST 5 *********
Error: del_frac() called on NULL Pointer.
called malloc(160): return 0x9c0670

**** BEGIN HEAP DUMP ****

0x9c0670
0x9c0680
0x9c0690
0x9c06a0
0x9c06b0
0x9c06c0
0x9c06d0
0x9c06e0
0x9c06f0
0x9c0700
**** END HEAP DUMP ****

[mag4@linux3 proj6]./test[K[K[K[K[K[Kmake test6.out
gcc test6.o frac_heap.o -o test6.out
[mag4@linux3 proj6]./test5[K6.out

******** TEST 6 *********
called malloc(160): return 0x1180670

called malloc(160): return 0x1180720

called malloc(160): return 0x11807d0

called malloc(160): return 0x1180880

called malloc(160): return 0x1180930

called malloc(160): return 0x11809e0

called malloc(160): return 0x1180a90

called malloc(160): return 0x1180b40

called malloc(160): return 0x1180bf0

called malloc(160): return 0x1180ca0

called malloc(160): return 0x1180d50

called malloc(160): return 0x1180e00

called malloc(160): return 0x1180eb0

called malloc(160): return 0x1180f60

called malloc(160): return 0x1181010

called malloc(160): return 0x11810c0

called malloc(160): return 0x1181170

called malloc(160): return 0x1181220

called malloc(160): return 0x11812d0

called malloc(160): return 0x1181380

called malloc(160): return 0x1181430

called malloc(160): return 0x11814e0

called malloc(160): return 0x1181590

called malloc(160): return 0x1181640

called malloc(160): return 0x11816f0

called malloc(160): return 0x11817a0

called malloc(160): return 0x1181850

called malloc(160): return 0x1181900

called malloc(160): return 0x11819b0

called malloc(160): return 0x1181a60

called malloc(160): return 0x1181b10

called malloc(160): return 0x1181bc0

called malloc(160): return 0x1181c70

called malloc(160): return 0x1181d20

called malloc(160): return 0x1181dd0

called malloc(160): return 0x1181e80

called malloc(160): return 0x1181f30

called malloc(160): return 0x1181fe0

called malloc(160): return 0x1182090

called malloc(160): return 0x1182140

called malloc(160): return 0x11821f0

called malloc(160): return 0x11822a0

called malloc(160): return 0x1182350

called malloc(160): return 0x1182400

called malloc(160): return 0x11824b0

called malloc(160): return 0x1182560

called malloc(160): return 0x1182610

called malloc(160): return 0x11826c0

called malloc(160): return 0x1182770

called malloc(160): return 0x1182820

called malloc(160): return 0x11828d0

called malloc(160): return 0x1182980

called malloc(160): return 0x1182a30

called malloc(160): return 0x1182ae0

called malloc(160): return 0x1182b90

called malloc(160): return 0x1182c40

called malloc(160): return 0x1182cf0

called malloc(160): return 0x1182da0

called malloc(160): return 0x1182e50

called malloc(160): return 0x1182f00

called malloc(160): return 0x1182fb0

called malloc(160): return 0x1183060

called malloc(160): return 0x1183110

called malloc(160): return 0x11831c0

called malloc(160): return 0x1183270

called malloc(160): return 0x1183320

called malloc(160): return 0x11833d0

called malloc(160): return 0x1183480

called malloc(160): return 0x1183530

called malloc(160): return 0x11835e0

called malloc(160): return 0x1183690

called malloc(160): return 0x1183740

called malloc(160): return 0x11837f0

called malloc(160): return 0x11838a0

called malloc(160): return 0x1183950

called malloc(160): return 0x1183a00

called malloc(160): return 0x1183ab0

called malloc(160): return 0x1183b60

called malloc(160): return 0x1183c10

called malloc(160): return 0x1183cc0

called malloc(160): return 0x1183d70

called malloc(160): return 0x1183e20

called malloc(160): return 0x1183ed0

called malloc(160): return 0x1183f80

called malloc(160): return 0x1184030

called malloc(160): return 0x11840e0

called malloc(160): return 0x1184190

called malloc(160): return 0x1184240

called malloc(160): return 0x11842f0

called malloc(160): return 0x11843a0

called malloc(160): return 0x1184450

called malloc(160): return 0x1184500

called malloc(160): return 0x11845b0

called malloc(160): return 0x1184660

called malloc(160): return 0x1184710

called malloc(160): return 0x11847c0

called malloc(160): return 0x1184870

called malloc(160): return 0x1184920

called malloc(160): return 0x11849d0

called malloc(160): return 0x1184a80

**** BEGIN HEAP DUMP ****

0x1184b10
0x1184b00
0x1184af0
0x1184ae0
0x1184ad0
0x1184ac0
0x1184ab0
0x1184aa0
0x1184a90
0x1184a80
0x1184a60
0x1184a50
0x1184a40
0x1184a30
0x1184a20
0x1184a10
0x1184a00
0x11849f0
0x11849e0
0x11849d0
0x11849b0
0x11849a0
0x1184990
0x1184980
0x1184970
0x1184960
0x1184950
0x1184940
0x1184930
0x1184920
0x1184900
0x11848f0
0x11848e0
0x11848d0
0x11848c0
0x11848b0
0x11848a0
0x1184890
0x1184880
0x1184870
0x1184850
0x1184840
0x1184830
0x1184820
0x1184810
0x1184800
0x11847f0
0x11847e0
0x11847d0
0x11847c0
0x11847a0
0x1184790
0x1184780
0x1184770
0x1184760
0x1184750
0x1184740
0x1184730
0x1184720
0x1184710
0x11846f0
0x11846e0
0x11846d0
0x11846c0
0x11846b0
0x11846a0
0x1184690
0x1184680
0x1184670
0x1184660
0x1184640
0x1184630
0x1184620
0x1184610
0x1184600
0x11845f0
0x11845e0
0x11845d0
0x11845c0
0x11845b0
0x1184590
0x1184580
0x1184570
0x1184560
0x1184550
0x1184540
0x1184530
0x1184520
0x1184510
0x1184500
0x11844e0
0x11844d0
0x11844c0
0x11844b0
0x11844a0
0x1184490
0x1184480
0x1184470
0x1184460
0x1184450
0x1184430
0x1184420
0x1184410
0x1184400
0x11843f0
0x11843e0
0x11843d0
0x11843c0
0x11843b0
0x11843a0
0x1184380
0x1184370
0x1184360
0x1184350
0x1184340
0x1184330
0x1184320
0x1184310
0x1184300
0x11842f0
0x11842d0
0x11842c0
0x11842b0
0x11842a0
0x1184290
0x1184280
0x1184270
0x1184260
0x1184250
0x1184240
0x1184220
0x1184210
0x1184200
0x11841f0
0x11841e0
0x11841d0
0x11841c0
0x11841b0
0x11841a0
0x1184190
0x1184170
0x1184160
0x1184150
0x1184140
0x1184130
0x1184120
0x1184110
0x1184100
0x11840f0
0x11840e0
0x11840c0
0x11840b0
0x11840a0
0x1184090
0x1184080
0x1184070
0x1184060
0x1184050
0x1184040
0x1184030
0x1184010
0x1184000
0x1183ff0
0x1183fe0
0x1183fd0
0x1183fc0
0x1183fb0
0x1183fa0
0x1183f90
0x1183f80
0x1183f60
0x1183f50
0x1183f40
0x1183f30
0x1183f20
0x1183f10
0x1183f00
0x1183ef0
0x1183ee0
0x1183ed0
0x1183eb0
0x1183ea0
0x1183e90
0x1183e80
0x1183e70
0x1183e60
0x1183e50
0x1183e40
0x1183e30
0x1183e20
0x1183e00
0x1183df0
0x1183de0
0x1183dd0
0x1183dc0
0x1183db0
0x1183da0
0x1183d90
0x1183d80
0x1183d70
0x1183d50
0x1183d40
0x1183d30
0x1183d20
0x1183d10
0x1183d00
0x1183cf0
0x1183ce0
0x1183cd0
0x1183cc0
0x1183ca0
0x1183c90
0x1183c80
0x1183c70
0x1183c60
0x1183c50
0x1183c40
0x1183c30
0x1183c20
0x1183c10
0x1183bf0
0x1183be0
0x1183bd0
0x1183bc0
0x1183bb0
0x1183ba0
0x1183b90
0x1183b80
0x1183b70
0x1183b60
0x1183b40
0x1183b30
0x1183b20
0x1183b10
0x1183b00
0x1183af0
0x1183ae0
0x1183ad0
0x1183ac0
0x1183ab0
0x1183a90
0x1183a80
0x1183a70
0x1183a60
0x1183a50
0x1183a40
0x1183a30
0x1183a20
0x1183a10
0x1183a00
0x11839e0
0x11839d0
0x11839c0
0x11839b0
0x11839a0
0x1183990
0x1183980
0x1183970
0x1183960
0x1183950
0x1183930
0x1183920
0x1183910
0x1183900
0x11838f0
0x11838e0
0x11838d0
0x11838c0
0x11838b0
0x11838a0
0x1183880
0x1183870
0x1183860
0x1183850
0x1183840
0x1183830
0x1183820
0x1183810
0x1183800
0x11837f0
0x11837d0
0x11837c0
0x11837b0
0x11837a0
0x1183790
0x1183780
0x1183770
0x1183760
0x1183750
0x1183740
0x1183720
0x1183710
0x1183700
0x11836f0
0x11836e0
0x11836d0
0x11836c0
0x11836b0
0x11836a0
0x1183690
0x1183670
0x1183660
0x1183650
0x1183640
0x1183630
0x1183620
0x1183610
0x1183600
0x11835f0
0x11835e0
0x11835c0
0x11835b0
0x11835a0
0x1183590
0x1183580
0x1183570
0x1183560
0x1183550
0x1183540
0x1183530
0x1183510
0x1183500
0x11834f0
0x11834e0
0x11834d0
0x11834c0
0x11834b0
0x11834a0
0x1183490
0x1183480
0x1183460
0x1183450
0x1183440
0x1183430
0x1183420
0x1183410
0x1183400
0x11833f0
0x11833e0
0x11833d0
0x11833b0
0x11833a0
0x1183390
0x1183380
0x1183370
0x1183360
0x1183350
0x1183340
0x1183330
0x1183320
0x1183300
0x11832f0
0x11832e0
0x11832d0
0x11832c0
0x11832b0
0x11832a0
0x1183290
0x1183280
0x1183270
0x1183250
0x1183240
0x1183230
0x1183220
0x1183210
0x1183200
0x11831f0
0x11831e0
0x11831d0
0x11831c0
0x11831a0
0x1183190
0x1183180
0x1183170
0x1183160
0x1183150
0x1183140
0x1183130
0x1183120
0x1183110
0x11830f0
0x11830e0
0x11830d0
0x11830c0
0x11830b0
0x11830a0
0x1183090
0x1183080
0x1183070
0x1183060
0x1183040
0x1183030
0x1183020
0x1183010
0x1183000
0x1182ff0
0x1182fe0
0x1182fd0
0x1182fc0
0x1182fb0
0x1182f90
0x1182f80
0x1182f70
0x1182f60
0x1182f50
0x1182f40
0x1182f30
0x1182f20
0x1182f10
0x1182f00
0x1182ee0
0x1182ed0
0x1182ec0
0x1182eb0
0x1182ea0
0x1182e90
0x1182e80
0x1182e70
0x1182e60
0x1182e50
0x1182e30
0x1182e20
0x1182e10
0x1182e00
0x1182df0
0x1182de0
0x1182dd0
0x1182dc0
0x1182db0
0x1182da0
0x1182d80
0x1182d70
0x1182d60
0x1182d50
0x1182d40
0x1182d30
0x1182d20
0x1182d10
0x1182d00
0x1182cf0
0x1182cd0
0x1182cc0
0x1182cb0
0x1182ca0
0x1182c90
0x1182c80
0x1182c70
0x1182c60
0x1182c50
0x1182c40
0x1182c20
0x1182c10
0x1182c00
0x1182bf0
0x1182be0
0x1182bd0
0x1182bc0
0x1182bb0
0x1182ba0
0x1182b90
0x1182b70
0x1182b60
0x1182b50
0x1182b40
0x1182b30
0x1182b20
0x1182b10
0x1182b00
0x1182af0
0x1182ae0
0x1182ac0
0x1182ab0
0x1182aa0
0x1182a90
0x1182a80
0x1182a70
0x1182a60
0x1182a50
0x1182a40
0x1182a30
0x1182a10
0x1182a00
0x11829f0
0x11829e0
0x11829d0
0x11829c0
0x11829b0
0x11829a0
0x1182990
0x1182980
0x1182960
0x1182950
0x1182940
0x1182930
0x1182920
0x1182910
0x1182900
0x11828f0
0x11828e0
0x11828d0
0x11828b0
0x11828a0
0x1182890
0x1182880
0x1182870
0x1182860
0x1182850
0x1182840
0x1182830
0x1182820
0x1182800
0x11827f0
0x11827e0
0x11827d0
0x11827c0
0x11827b0
0x11827a0
0x1182790
0x1182780
0x1182770
0x1182750
0x1182740
0x1182730
0x1182720
0x1182710
0x1182700
0x11826f0
0x11826e0
0x11826d0
0x11826c0
0x11826a0
0x1182690
0x1182680
0x1182670
0x1182660
0x1182650
0x1182640
0x1182630
0x1182620
0x1182610
0x11825f0
0x11825e0
0x11825d0
0x11825c0
0x11825b0
0x11825a0
0x1182590
0x1182580
0x1182570
0x1182560
0x1182540
0x1182530
0x1182520
0x1182510
0x1182500
0x11824f0
0x11824e0
0x11824d0
0x11824c0
0x11824b0
0x1182490
0x1182480
0x1182470
0x1182460
0x1182450
0x1182440
0x1182430
0x1182420
0x1182410
0x1182400
0x11823e0
0x11823d0
0x11823c0
0x11823b0
0x11823a0
0x1182390
0x1182380
0x1182370
0x1182360
0x1182350
0x1182330
0x1182320
0x1182310
0x1182300
0x11822f0
0x11822e0
0x11822d0
0x11822c0
0x11822b0
0x11822a0
0x1182280
0x1182270
0x1182260
0x1182250
0x1182240
0x1182230
0x1182220
0x1182210
0x1182200
0x11821f0
0x11821d0
0x11821c0
0x11821b0
0x11821a0
0x1182190
0x1182180
0x1182170
0x1182160
0x1182150
0x1182140
0x1182120
0x1182110
0x1182100
0x11820f0
0x11820e0
0x11820d0
0x11820c0
0x11820b0
0x11820a0
0x1182090
0x1182070
0x1182060
0x1182050
0x1182040
0x1182030
0x1182020
0x1182010
0x1182000
0x1181ff0
0x1181fe0
0x1181fc0
0x1181fb0
0x1181fa0
0x1181f90
0x1181f80
0x1181f70
0x1181f60
0x1181f50
0x1181f40
0x1181f30
0x1181f10
0x1181f00
0x1181ef0
0x1181ee0
0x1181ed0
0x1181ec0
0x1181eb0
0x1181ea0
0x1181e90
0x1181e80
0x1181e60
0x1181e50
0x1181e40
0x1181e30
0x1181e20
0x1181e10
0x1181e00
0x1181df0
0x1181de0
0x1181dd0
0x1181db0
0x1181da0
0x1181d90
0x1181d80
0x1181d70
0x1181d60
0x1181d50
0x1181d40
0x1181d30
0x1181d20
0x1181d00
0x1181cf0
0x1181ce0
0x1181cd0
0x1181cc0
0x1181cb0
0x1181ca0
0x1181c90
0x1181c80
0x1181c70
0x1181c50
0x1181c40
0x1181c30
0x1181c20
0x1181c10
0x1181c00
0x1181bf0
0x1181be0
0x1181bd0
0x1181bc0
0x1181ba0
0x1181b90
0x1181b80
0x1181b70
0x1181b60
0x1181b50
0x1181b40
0x1181b30
0x1181b20
0x1181b10
0x1181af0
0x1181ae0
0x1181ad0
0x1181ac0
0x1181ab0
0x1181aa0
0x1181a90
0x1181a80
0x1181a70
0x1181a60
0x1181a40
0x1181a30
0x1181a20
0x1181a10
0x1181a00
0x11819f0
0x11819e0
0x11819d0
0x11819c0
0x11819b0
0x1181990
0x1181980
0x1181970
0x1181960
0x1181950
0x1181940
0x1181930
0x1181920
0x1181910
0x1181900
0x11818e0
0x11818d0
0x11818c0
0x11818b0
0x11818a0
0x1181890
0x1181880
0x1181870
0x1181860
0x1181850
0x1181830
0x1181820
0x1181810
0x1181800
0x11817f0
0x11817e0
0x11817d0
0x11817c0
0x11817b0
0x11817a0
0x1181780
0x1181770
0x1181760
0x1181750
0x1181740
0x1181730
0x1181720
0x1181710
0x1181700
0x11816f0
0x11816d0
0x11816c0
0x11816b0
0x11816a0
0x1181690
0x1181680
0x1181670
0x1181660
0x1181650
0x1181640
0x1181620
0x1181610
0x1181600
0x11815f0
0x11815e0
0x11815d0
0x11815c0
0x11815b0
0x11815a0
0x1181590
0x1181570
0x1181560
0x1181550
0x1181540
0x1181530
0x1181520
0x1181510
0x1181500
0x11814f0
0x11814e0
0x11814c0
0x11814b0
0x11814a0
0x1181490
0x1181480
0x1181470
0x1181460
0x1181450
0x1181440
0x1181430
0x1181410
0x1181400
0x11813f0
0x11813e0
0x11813d0
0x11813c0
0x11813b0
0x11813a0
0x1181390
0x1181380
0x1181360
0x1181350
0x1181340
0x1181330
0x1181320
0x1181310
0x1181300
0x11812f0
0x11812e0
0x11812d0
0x11812b0
0x11812a0
0x1181290
0x1181280
0x1181270
0x1181260
0x1181250
0x1181240
0x1181230
0x1181220
0x1181200
0x11811f0
0x11811e0
0x11811d0
0x11811c0
0x11811b0
0x11811a0
0x1181190
0x1181180
0x1181170
0x1181150
0x1181140
0x1181130
0x1181120
0x1181110
0x1181100
0x11810f0
0x11810e0
0x11810d0
0x11810c0
0x11810a0
0x1181090
0x1181080
0x1181070
0x1181060
0x1181050
0x1181040
0x1181030
0x1181020
0x1181010
0x1180ff0
0x1180fe0
0x1180fd0
0x1180fc0
0x1180fb0
0x1180fa0
0x1180f90
0x1180f80
0x1180f70
0x1180f60
0x1180f40
0x1180f30
0x1180f20
0x1180f10
0x1180f00
0x1180ef0
0x1180ee0
0x1180ed0
0x1180ec0
0x1180eb0
0x1180e90
0x1180e80
0x1180e70
0x1180e60
0x1180e50
0x1180e40
0x1180e30
0x1180e20
0x1180e10
0x1180e00
0x1180de0
0x1180dd0
0x1180dc0
0x1180db0
0x1180da0
0x1180d90
0x1180d80
0x1180d70
0x1180d60
0x1180d50
0x1180d30
0x1180d20
0x1180d10
0x1180d00
0x1180cf0
0x1180ce0
0x1180cd0
0x1180cc0
0x1180cb0
0x1180ca0
0x1180c80
0x1180c70
0x1180c60
0x1180c50
0x1180c40
0x1180c30
0x1180c20
0x1180c10
0x1180c00
0x1180bf0
0x1180bd0
0x1180bc0
0x1180bb0
0x1180ba0
0x1180b90
0x1180b80
0x1180b70
0x1180b60
0x1180b50
0x1180b40
0x1180b20
0x1180b10
0x1180b00
0x1180af0
0x1180ae0
0x1180ad0
0x1180ac0
0x1180ab0
0x1180aa0
0x1180a90
0x1180a70
0x1180a60
0x1180a50
0x1180a40
0x1180a30
0x1180a20
0x1180a10
0x1180a00
0x11809f0
0x11809e0
0x11809c0
0x11809b0
0x11809a0
0x1180990
0x1180980
0x1180970
0x1180960
0x1180950
0x1180940
0x1180930
0x1180910
0x1180900
0x11808f0
0x11808e0
0x11808d0
0x11808c0
0x11808b0
0x11808a0
0x1180890
0x1180880
0x1180860
0x1180850
0x1180840
0x1180830
0x1180820
0x1180810
0x1180800
0x11807f0
0x11807e0
0x11807d0
0x11807b0
0x11807a0
0x1180790
0x1180780
0x1180770
0x1180760
0x1180750
0x1180740
0x1180730
0x1180720
0x1180700
0x11806f0
0x11806e0
0x11806d0
0x11806c0
0x11806b0
0x11806a0
0x1180690
0x1180680
0x1180670
**** END HEAP DUMP ****

[mag4@linux3 proj6]ls
frac_heap.c   frac_heap.h  Makefile  proj6.c  proj6.txt  test1.o    test2.c  test2.out	test3.o    test4.c  test4.out  test5.o	  test6.c  test6.out
frac_heap.c~  frac_heap.o  proj6     proj6.o  test1.c	 test1.out  test2.o  test3.c	test3.out  test4.o  test5.c    test5.out  test6.o  typescript
[mag4@linux3 proj6]exit
exit

Script done on 2019-04-27 12:23:36-04:00
